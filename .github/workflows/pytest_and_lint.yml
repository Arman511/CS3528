name: CI and Coverage and Lint

on:
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    runs-on: blacksmith-4vcpu-ubuntu-2404

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Cache Python dependencies
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir pylint
          if [ -f requirements.txt ]; then pip install --no-cache-dir -r requirements.txt; fi

      - name: Lint with pylint
        run: |
          pylint --disable=W1203,W0621,C0415,R0801,C0413 --exit-zero .

  test:
    runs-on: blacksmith-4vcpu-ubuntu-2404

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: useblacksmith/setup-node@v5
        with:
          node-version: "22.x"

      - name: Cache Node.js dependencies
        uses: useblacksmith/cache@v5
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-mongodb-8.0
          restore-keys: |
            ${{ runner.os }}-node-mongodb-8.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: "8.0"
          mongodb-replica-set: test-rs
        env:
          CI: true
          IS_GITHUB_ACTION: "True"
          IS_TEST: "True"
          MONGO_DB_TEST: "cs3528_test"
          SUPERUSER_EMAIL: "dummy@admin.com"
          SUPERUSER_PASSWORD: "dummy"

      - name: Set up Python 3.10
        uses: useblacksmith/setup-python@v6
        with:
          python-version: "3.10"

      - name: Cache Python dependencies
        uses: useblacksmith/cache@v5
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir pytest coverage selenium flask flask-caching
          if [ -f requirements.txt ]; then pip install --no-cache-dir -r requirements.txt; fi

      - name: Set up ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Start virtual display for headless tests
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Run tests with coverage
        env:
          SECRET_KEY: "psZsPEYjcq9@?(!6w=dK"
          IS_TEST: "True"
          MONGO_DB_TEST: "cs3528_test"
          IS_GITHUB_ACTION: "True"
          SUPERUSER_EMAIL: "dummy@admin.com"
          SUPERUSER_PASSWORD: "dummy"
        run: |
          coverage run -m pytest
          coverage xml -o coverage.xml

      - name: Upload Coverage Report
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
